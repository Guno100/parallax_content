{"version":3,"sources":["parallaxContent.es6"],"names":["$","fn","parallaxContent","method","methods","init","options","settings","extend","duration","shift","scrollTop","windowHeight","triggerPosition","window","on","height","this","each","$this","thisHeight","outerHeight","animationTriggerStart","animationTriggerEnd","offset","animationLength","animateDuration","data","top","addClass","centerPixelShift","centerPercentShift","y","TweenLite","to","removeClass","apply","Array","prototype","slice","call","arguments","_typeof","error","jQuery"],"mappings":"oOAAA,SAAWA,GAGPA,EAAEC,GAAGC,gBAAkB,SAAUC,GAE7B,GAAIC,IAEAC,KAAM,SAAUC,GAEZ,GAAIC,GAAWP,EAAEQ,QACbC,SAAU,IACVC,MAAO,IACRJ,GAGCK,EAAY,EACZC,EAAe,EACfC,EAAkB,CAGtBb,GAAEc,QAAQC,GAAG,cAAe,WACxBJ,EAAYX,EAAEc,QAAQH,YACtBC,EAAeZ,EAAEc,QAAQE,SAEzBH,EAAkBF,EAAYC,IAIlCK,KAAKC,KAAK,WAGN,GAAIC,GAAQnB,EAAEiB,MACVG,EAAaD,EAAME,cACnBC,EAAwB,EACxBC,EAAsB,EACtBC,EAAS,EACTC,EAAkB,EAClBC,EAAkBP,EAAMQ,KAAK,mBAAqBpB,EAASG,KAI/DV,GAAEc,QAAQC,GAAG,cAAe,WAExBS,EAASL,EAAMK,SAEfF,EAAwBE,EAAOI,IAE/BL,EAAsBD,EAAwBV,EAE9Ca,EAAkBF,EAAsBD,IAI5CtB,EAAEc,QAAQC,GAAG,qBAAsB,WAE/B,GAAIF,EAAkBS,GAAyBT,EAAkBU,EAAsBH,EAAY,CAE/FD,EAAMU,SAAS,SAEf,IAAIC,GAAmBjB,EAAkBW,EAAOI,IAAyB,GAAlBH,EAEnDM,EAAqBD,GAAoBL,EAAkB,KAAO,EAElEO,EAAIN,EAAkB,IAAMK,CAEhCE,WAAUC,GAAGf,EAAOZ,EAASE,UAAWuB,EAAGA,EAAI,WAK/Cb,GAAMgB,YAAY,eAWtC,OAAI/B,GAAQD,GACDC,EAAQD,GAAQiC,MAAMnB,KAAMoB,MAAMC,UAAUC,MAAMC,KAAKC,UAAW,IAChD,gBAAlB,KAAOtC,EAAP,YAAAuC,QAAOvC,KAAwBA,MAGtCH,GAAE2C,MAAM,oCAAsCxC,EAAS,gCAFhDC,EAAQC,KAAK+B,MAAMnB,KAAMwB,aAOzCG","file":"parallaxContent.min.js","sourcesContent":["(function ($) {\n\n\n    $.fn.parallaxContent = function (method) {\n\n        let methods = {\n\n            init: function (options) {\n\n                let settings = $.extend({\n                    duration: 1.5,\n                    shift: 10\n                }, options);\n\n\n                let scrollTop = 0,\n                    windowHeight = 0,\n                    triggerPosition = 0;\n\n\n                $(window).on('scroll load', function () {\n                    scrollTop = $(window).scrollTop();\n                    windowHeight = $(window).height();\n\n                    triggerPosition = scrollTop + windowHeight;\n                });\n\n\n                this.each(function () {\n\n\n                    let $this = $(this),\n                        thisHeight = $this.outerHeight(),\n                        animationTriggerStart = 0,\n                        animationTriggerEnd = 0,\n                        offset = 0,\n                        animationLength = 0,\n                        animateDuration = $this.data('parallax-shift') || settings.shift;\n\n\n\n                    $(window).on('load resize', function () {\n\n                        offset = $this.offset();\n\n                        animationTriggerStart = offset.top;\n\n                        animationTriggerEnd = animationTriggerStart + windowHeight;\n\n                        animationLength = animationTriggerEnd - animationTriggerStart;\n                    });\n\n\n                    $(window).on('scroll resize load', function () {\n\n                        if (triggerPosition > animationTriggerStart && triggerPosition < animationTriggerEnd + thisHeight) {\n\n                            $this.addClass('active');\n\n                            let centerPixelShift = triggerPosition - offset.top - (animationLength * 0.5);\n\n                            let centerPercentShift = centerPixelShift / (animationLength / 100) * 2;\n\n                            let y = animateDuration / 100 * centerPercentShift;\n\n                            TweenLite.to($this, settings.duration, {y: y + 'px'});\n                            \n                        }\n\n                        else {\n                            $this.removeClass('active');\n                        }\n\n                    })\n                    \n                });\n              \n            }\n        };\n\n\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error('There is no method with the name ' + method + ', for jQuery.parallaxContent');\n        }\n    };\n\n\n})(jQuery);\n"]}